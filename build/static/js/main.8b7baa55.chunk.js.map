{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/Login.js","components/NewBlog.js","components/Blogs.js","App.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","maxWidth","bullet","display","margin","transform","header","backgroundColor","color","fontSize","minHeight","textAlign","content","position","pos","marginBottom","action","justifyContent","cursor","button","marginRight","spanLink","width","height","top","left","zIndex","Blog","blog","classes","Grid","item","lg","Card","className","variant","CardHeader","titleTypographyProps","title","subheader","author","CardActions","target","rel","href","url","Typography","disabled","style","token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","getUserBlogs","login","credentials","Alert","props","elevation","Login","username","password","setUsername","setPassword","handleLogin","error","Container","paragraph","align","id","onSubmit","TextField","value","onChange","size","label","required","type","Button","severity","theme","marginTop","spacing","NewBlog","updateBlogs","React","useState","submitted","setSubmitted","succes","setSuccess","errorMessage","setErrorMessage","newBlog","e","preventDefault","likes","blogServices","blogs","catch","err","console","log","setTimeout","htmlFor","CircularProgress","flexGrow","menuButton","maincolor","newLink","allBlogs","toggleButton","border","container","Blogs","user","page","setPage","AppBar","Toolbar","edge","name","ToggleButtonGroup","exclusive","event","newPage","ToggleButton","onClick","localStorage","clear","window","location","reload","justify","map","key","App","setBlogs","setUser","setError","useEffect","loggedUserJSON","getItem","JSON","parse","blogService","handleFormSubmit","loginService","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b7baa55.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Grid , IconButton} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    maxWidth: 100\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  header:{\r\n    backgroundColor: \"#1693BB\",\r\n    color: \"white\",\r\n    fontSize: \"1rem !important\",\r\n    minHeight: \"5rem\",\r\n    textAlign: \"center\"\r\n  },\r\n  content: {\r\n    position: \"relative\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  action: {\r\n    backgroundColor: \"#B03972\",\r\n    position: \"relative\",\r\n    justifyContent: \"center\",\r\n    '&:hover':{\r\n      cursor: \"pointer\",\r\n      backgroundColor: \"hsla(331, 51%, 46%, 0.84)\"\r\n    },\r\n    '&:active':{\r\n      backgroundColor: \"hsla(331, 51%, 43%, 0.91)\"\r\n    }\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n    marginRight: \"6px\"\r\n  },\r\n  spanLink: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 500\r\n  }\r\n});\r\n\r\nconst Blog = ({ blog }) => {\r\n  const classes = useStyles();\r\n  return (\r\n      <Grid item lg={4}>\r\n        <Card className={classes.root} variant=\"outlined\">\r\n          <CardHeader className={classes.header} titleTypographyProps={{variant:'subtitle1'}}title={blog.title} subheader={\"by \" + blog.author} />\r\n\r\n          <CardActions className={classes.action}>\r\n            <a target=\"_blank\"  rel=\"noopener noreferrer\" href={blog.url}>\r\n              <span className={classes.spanLink}></span>\r\n            </a>\r\n              <Typography className={classes.button}>Go to blog</Typography>\r\n              <OpenInNewIcon disabled style={{color: \"white\"}} />\r\n          </CardActions>\r\n        </Card>\r\n\r\n      </Grid>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n// const baseUrl = 'http://localhost:3001/blogs'\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject =>{\n  const config = {\n    headers: {Authorization: token}\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response\n}\n\nconst getUserBlogs = async () =>{\n  const config = {\n    headers: {Authorization: token}\n  }\n\n  const response = await axios.get(baseUrl, config)\n  return response.data\n\n}\n\nexport default { getAll, setToken, create, getUserBlogs}","import axios from 'axios'\r\nconst baseurl = '/api/login'\r\n\r\nconst login = async credentials =>{\r\n    const response = await axios.post(baseurl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default {login}","import React from \"react\";\r\nimport { Button, TextField , Typography, Container} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n\r\nconst Login = props => {\r\n    let {username, password, setUsername, setPassword, handleLogin, error} = props;\r\n\r\n    return (\r\n        <Container>\r\n            <Typography paragraph align=\"center\" variant='h3' color=\"primary\">Bloggie</Typography>\r\n            <Container>\r\n                <form id=\"loginForm\" onSubmit={handleLogin}>\r\n                    <TextField value={username} onChange={({target}) => setUsername(target.value)} size=\"small\" label=\"username\" variant=\"outlined\" required></TextField>\r\n                    <TextField value={password} onChange={({target}) => setPassword(target.value)} size=\"small\" type=\"password\" label=\"password\" variant=\"outlined\" required></TextField>\r\n                    <Button size=\"small\" type=\"submit\" variant=\"contained\" color=\"primary\">Login</Button>\r\n                    {error !== null  ?\r\n                        <Alert severity=\"error\">{error}</Alert> : <span></span>\r\n                    }\r\n                </form>\r\n\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport blogServices from '../services/blogs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport './NewBlog.css'\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst NewBlog = props => {\r\n    let {updateBlogs} = props;\r\n    const [submitted, setSubmitted] = React.useState('false')\r\n    const [succes, setSuccess] = React.useState(null)\r\n    const [errorMessage, setErrorMessage] = React.useState('')\r\n\r\n    const newBlog = async e =>{\r\n        e.preventDefault()\r\n        const title = e.target.title.value\r\n        const author = e.target.author.value\r\n        const likes = e.target.likes.value\r\n        const url = e.target.url.value\r\n        setSubmitted(true)\r\n        const blog = {\r\n            title,\r\n            author,\r\n            likes,\r\n            url\r\n        }\r\n        blogServices.create(blog).then(() =>{\r\n            blogServices.getUserBlogs().then(blogs => updateBlogs(blogs)).catch(err => {\r\n                console.log(\"error fetching blogs: \", err)\r\n            })\r\n            setTimeout(() =>{\r\n                setSubmitted(false)\r\n                setSuccess(true)\r\n            }, 2000)\r\n            setTimeout(() => {\r\n                setSuccess('')\r\n            }, 5000)\r\n        }).catch(err => {\r\n            setSubmitted(false)\r\n            setSuccess('error')\r\n            setErrorMessage(err.response.data.error)\r\n            setTimeout(() =>{\r\n                setSuccess(null)\r\n                setErrorMessage('')\r\n            }, 5000)\r\n        })\r\n\r\n    }\r\n    return (\r\n            <form onSubmit={newBlog} >\r\n                <div className=\"input\">\r\n                    <label className=\"input_title\" htmlFor=\"title\" ><span><p>Title</p></span></label>\r\n                    <input className=\"input_value\" type=\"text\" id=\"title\"/>\r\n                </div>\r\n                <div className=\"input\">\r\n                    <label className=\"input_title\" htmlFor=\"author\" ><span><p>Author</p></span></label>\r\n                    <input className=\"input_value\" type=\"text\" id=\"author\"/>\r\n                </div>\r\n                <div className=\"input\">\r\n                    <label className=\"input_title\" htmlFor=\"likes\" ><span><p>Likes</p></span></label>\r\n                    <input className=\"input_value\" type=\"text\" id=\"likes\"/>\r\n                </div>\r\n                <div className=\"input\">\r\n                    <label className=\"input_title\" htmlFor=\"url\" ><span><p>URL</p></span></label>\r\n                    <input className=\"input_value\" type=\"text\" id=\"url\"/>\r\n                </div>\r\n                <button className=\"btn\" type=\"submit\">Submit</button>\r\n                {submitted === true ?\r\n                    <CircularProgress /> : <span></span>\r\n                }\r\n                {succes === true ?\r\n                    <Alert severity=\"success\">Blog added!</Alert> :\r\n                    succes === 'error' ? <Alert severity=\"error\">{errorMessage}</Alert> : <span></span>\r\n                }\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default NewBlog;","import React from \"react\";\r\nimport Blog from './Blog';\r\nimport { Grid, Toolbar, IconButton, Button, TextField , Typography, Container} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport NewBlog from './NewBlog'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    username: {\r\n        flexGrow: 4,\r\n    },\r\n    maincolor:{\r\n        backgroundColor: \"#B03972\"\r\n    },\r\n    newLink: {\r\n        flexGrow: 2\r\n    },\r\n    allBlogs: {\r\n        flexGrow: 2\r\n    },\r\n    title:{\r\n        fontSize: \"2.3rem\"\r\n    },\r\n    toggleButton:{\r\n        border: \"none\",\r\n        color: \"white\"\r\n    },\r\n    container:{\r\n        marginTop: \"2rem\"\r\n    }\r\n}));\r\n\r\n\r\nconst Blogs = props => {\r\n    let {user, blogs, updateBlogs} = props;\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState('all');\r\n    const logout = () =>{\r\n        localStorage.clear()\r\n        window.location.reload(true)\r\n    }\r\n    const handlePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={classes.maincolor}>\r\n                    <Typography variant=\"h6\" edge=\"start\" className={classes.username}>\r\n                        {user.name}\r\n                    </Typography>\r\n                    <ToggleButtonGroup\r\n                        value={page}\r\n                        exclusive\r\n                        onChange={handlePage}\r\n                        size=\"medium\"\r\n                    >\r\n                        <ToggleButton className={classes.toggleButton} value=\"all\" >\r\n                            <div className={classes.allBlogs} color=\"inherit\">All your blogs</div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className={classes.toggleButton} value=\"new\" >\r\n                            <div className={classes.newLink} color=\"inherit\">Add new link</div>\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                    <Button onClick={logout} color=\"inherit\">Logout</Button>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            {page === 'all' ?\r\n                <Grid className={classes.container} container justify=\"space-evenly\" >\r\n                    {blogs.map(blog =>\r\n                        <Blog key={blog.id} blog={blog} />\r\n                    )}\r\n                </Grid>\r\n                :\r\n                <NewBlog updateBlogs={updateBlogs} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blogs;","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './main.css'\nimport { Input, Button, TextField , Typography, Container} from '@material-ui/core';\nimport Login from './components/Login'\nimport Blogs from './components/Blogs'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [user, setUser] = useState(null)\n    const [error, setError] = useState(null)\n\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            blogService.setToken(user.token)\n            blogService.getUserBlogs().then(blogs => setBlogs(blogs)).catch(err => {\n                console.log(\"error fetching blogs: \", err)\n            })\n\n        }\n    }, [])\n\n\nconst handleFormSubmit = async event =>{\n    event.preventDefault()\n    try {\n       const user = await loginService.login({username, password})\n        setUser(user)\n        blogService.setToken(user.token)\n        window.localStorage.setItem(\n            'loggedBlogAppUser', JSON.stringify(user)\n        )\n        setUsername('')\n        setPassword('')\n        blogService.getUserBlogs().then(blogs => setBlogs(blogs)).catch(err => {\n            console.log(\"error fetching blogs: \", err)\n        })\n    }\n    catch (exception){\n        setError(exception.response.data.error)\n        setTimeout(() =>{\n            setError(null)\n        }, 4000)\n    }\n\n\n}\n  return (\n      <>\n      {user === null\n          ?\n          <Login error= {error} username={username} password={password} setUsername={setUsername} setPassword={setPassword} handleLogin={handleFormSubmit}/>\n          :\n          <Blogs user={user} blogs={blogs} updateBlogs={setBlogs} />\n      }\n      </>\n\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}