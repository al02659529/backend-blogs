{"version":3,"sources":["services/blogs.js","reducers/usernameReducer.js","reducers/passwordReducer.js","services/login.js","reducers/userReducer.js","reducers/errorReducer.js","reducers/blogsReducer.js","reducers/pageReducer.js","components/Login.js","reducers/showLikesReducer.js","components/Blog.js","reducers/successReducer.js","reducers/submittedReducer.js","components/NewBlog.js","reducers/sortReducer.js","components/Blogs.js","components/Logout.js","services/register.js","components/Register.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","getUserBlogs","deleteBlog","id","delete","updateBlog","blog","patch","setUsername","type","usernameReducer","state","action","setPassword","passwordReducer","login","credentials","setUser","userReducer","setError","seconds","dispatch","timeoutCollection","removeAll","setTimeout","errorReducer","setBlogs","blogsReducer","setPage","pageReducer","Alert","props","elevation","variant","Login","useDispatch","history","useHistory","username","useSelector","password","error","handleLogin","event","preventDefault","loginService","user","blogService","cookie","set","JSON","stringify","expires","userBlogs","Container","Typography","paragraph","align","color","onSubmit","TextField","value","onChange","target","size","label","required","Button","onClick","push","style","display","className","severity","showLikesReducer","isIdInState","filter","concat","length","useStyles","makeStyles","root","minWidth","maxWidth","position","bullet","margin","transform","header","backgroundColor","fontSize","minHeight","textAlign","content","pos","marginBottom","justifyContent","cursor","button","marginRight","spanLink","width","height","top","left","zIndex","expandIconContainer","deleteIconContainer","right","Blog","index","showLikes","blogs","classes","newBlogs","item","blogServices","toggleShowLikes","console","log","changeLikes","Card","CardHeader","titleTypographyProps","title","subheader","author","likes","e","newBlog","CardActions","rel","href","url","disabled","setSuccess","successReducer","setSubmitted","submittedReducer","NewBlog","isSubmitted","success","htmlFor","CircularProgress","sortReducer","theme","flexGrow","menuButton","spacing","maincolor","newLink","allBlogs","toggleButton","border","container","NoBlogs","padding","borderRadius","Blogs","page","sort","sortBy","sortByDate","blogsService","databaseBlogs","AppBar","Toolbar","edge","name","ToggleButtonGroup","exclusive","newPage","ToggleButton","newSort","sortedBlogs","b","parseFloat","map","key","Logout","remove","window","location","reload","registerUser","userObject","Register","handleSubmit","newUser","service","placeholder","App","useEffect","loggedUserJSON","loggedUser","parse","catch","err","path","to","combinedStore","combineReducers","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40f89200.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n    const config = {\n        headers: { Authorization: token }\n    }\n\n    const response = await axios.post(baseUrl, newObject, config)\n    return response\n}\n\nconst getUserBlogs = async () => {\n    const config = {\n        headers: { Authorization: token }\n    }\n\n    const response = await axios.get(baseUrl, config)\n    return response.data\n\n}\n\nconst deleteBlog = async id => {\n    const config = {\n        headers: { Authorization: token }\n    }\n    const response = await axios.delete(`${baseUrl + '/' + id}`, config)\n    return response\n}\n\nconst updateBlog = async blog => {\n    const config = {\n        headers: { Authorization: token }\n    }\n    const response = await axios.patch(baseUrl + '/' + blog.id, blog, config)\n    return response\n}\n\nexport default { getAll, setToken, create, getUserBlogs, deleteBlog, updateBlog }","const usernameReducer = (state='', action) => {\r\n    switch (action.type){\r\n    case 'SET_USERNAME':{\r\n        return action.data\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const setUsername = data => {\r\n    return { type: 'SET_USERNAME', data }\r\n}\r\n\r\nexport default usernameReducer","const passwordReducer = (state='', action) => {\r\n    switch (action.type){\r\n    case 'SET_PASSWORD':{\r\n        return action.data\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const setPassword = data => {\r\n    return { type: 'SET_PASSWORD', data }\r\n}\r\n\r\nexport default passwordReducer","import axios from 'axios'\r\nconst baseurl = '/api/login'\r\n\r\n\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseurl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","\r\nconst userReducer = (state=null, action) => {\r\n    switch (action.type){\r\n    case 'SET_USER':{\r\n        return action.data\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const setUser = data => {\r\n    return { type: 'SET_USER', data }\r\n}\r\n\r\nexport default userReducer","import { timeoutCollection } from 'time-events-manager/src/timeout/timeout-decorator'\r\n\r\nconst errorReducer = ( state=null, action ) => {\r\n    switch (action.type) {\r\n    case 'SET_ERROR': {\r\n        return action.data\r\n    }\r\n    case 'REMOVE_ERROR': {\r\n        return action.data\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const clearError = () => {\r\n    return {\r\n        type: 'REMOVE_ERROR',\r\n        data: null\r\n    }\r\n}\r\n\r\nexport const setError = ( data, seconds=5 ) => {\r\n    return  dispatch => {\r\n        dispatch( { type: 'SET_ERROR', data } )\r\n        timeoutCollection.removeAll()\r\n        setTimeout(() => { dispatch( clearError() )}, seconds * 1000)\r\n    }\r\n}\r\n\r\n\r\nexport default errorReducer","const blogsReducer = (state=[], action) => {\r\n    switch (action.type){\r\n    case 'SET_BLOGS':{\r\n        return action.data\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const setBlogs = data => {\r\n    return { type: 'SET_BLOGS', data }\r\n}\r\n\r\nexport default blogsReducer","const pageReducer = (state='all', action) => {\r\n    switch (action.type){\r\n    case 'SET_PAGE':{\r\n        return action.data\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const setPage = data => {\r\n    return { type: 'SET_PAGE', data }\r\n}\r\n\r\nexport default pageReducer","import React from 'react'\r\nimport { Button, TextField , Typography, Container } from '@material-ui/core'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setUsername } from '../reducers/usernameReducer'\r\nimport { setPassword } from '../reducers/passwordReducer'\r\nimport loginService from '../services/login'\r\nimport { setUser } from '../reducers/userReducer'\r\nimport blogService from '../services/blogs'\r\nimport { setError } from '../reducers/errorReducer'\r\nimport { setBlogs } from '../reducers/blogsReducer'\r\nimport { setPage } from '../reducers/pageReducer'\r\nimport cookie from 'cookie_js'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const username = useSelector( state => state.username )\r\n    const password = useSelector( state => state.password)\r\n    const error = useSelector( state => state.error)\r\n\r\n    const handleLogin = async event => {\r\n        event.preventDefault()\r\n        try {\r\n            const user = await loginService.login({ username, password })\r\n            dispatch(setUser(user))\r\n            blogService.setToken(user.token)\r\n            cookie.set('loggedBlogAppUser', JSON.stringify(user), { expires: 7 })\r\n            dispatch(setUsername(''))\r\n            dispatch(setPassword(''))\r\n            const userBlogs = await blogService.getUserBlogs()\r\n            dispatch(setBlogs(userBlogs))\r\n            dispatch(setPage('all'))\r\n        }\r\n        catch (exception){\r\n            dispatch(setError(exception.response.data.error))\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        dispatch(setPage('register'))\r\n        history.push('/register')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Typography paragraph align=\"center\" variant='h3' color=\"primary\">Bloggie</Typography>\r\n                <Container>\r\n                    <form id=\"loginForm\" onSubmit={handleLogin}>\r\n                        <TextField value={username} onChange={ ( { target } ) => dispatch(setUsername(target.value)) } size=\"small\" label=\"username\" variant=\"outlined\" required></TextField>\r\n                        <TextField value={password} onChange={ ( { target } ) => dispatch(setPassword(target.value)) } size=\"small\" type=\"password\" label=\"password\" variant=\"outlined\" required></TextField>\r\n                        <Button size=\"small\" type=\"submit\" variant=\"contained\" color=\"primary\">Login</Button>\r\n                        <div>\r\n                            <p>Not a user? <button onClick={handleClick} style={{ display: 'inline-block' }}>Register here</button></p>\r\n                        </div>\r\n                    </form>\r\n                    {error !== null  ?\r\n                        <div className=\"alertWrapper\">\r\n                            <Alert severity=\"error\">{error}</Alert>\r\n                        </div>: null\r\n                    }\r\n                </Container>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","const showLikesReducer = (state=[], action) => {\r\n    switch (action.type){\r\n    case 'SHOW_LIKES_OF_COMPONENT' :{\r\n        const isIdInState = state.filter(id => id === action.id)\r\n        if (isIdInState){\r\n            return state\r\n        }\r\n        return state.concat(action.id)\r\n    }\r\n    case 'CLOSE_LIKES_OF_COMPONENT': {\r\n        return state.filter(id => id !== action.id)\r\n    }\r\n    case 'TOGGLE_VIEW_OF_LIKES':{\r\n        const isIdInState = state.filter(id => id === action.id)\r\n\r\n        if (isIdInState.length > 0){\r\n            return state.filter(id => id !== action.id)\r\n        }\r\n        return state.concat(action.id)\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const addComponentIdToShowLikes = id => {\r\n    return { type: 'SHOW_LIKES_OF_COMPONENT', id }\r\n}\r\n\r\nexport const removeComponentIdToNotShowLikes = id => {\r\n    return { type: 'CLOSE_LIKES_OF_COMPONENT', id }\r\n}\r\n\r\nexport const toggleIdOfComponentToHideOrShowLikes = id => {\r\n    return { type: 'TOGGLE_VIEW_OF_LIKES', id }\r\n}\r\n\r\nexport default showLikesReducer","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\r\nimport blogServices from '../services/blogs'\r\nimport UnfoldLessIcon from '@material-ui/icons/UnfoldLess'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setBlogs } from '../reducers/blogsReducer'\r\nimport { toggleIdOfComponentToHideOrShowLikes } from '../reducers/showLikesReducer'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        maxWidth: 100,\r\n        position: 'relative'\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    header:{\r\n        backgroundColor: '#1693BB',\r\n        color: 'white',\r\n        fontSize: '1rem !important',\r\n        minHeight: '5rem',\r\n        textAlign: 'center'\r\n    },\r\n    content: {\r\n        position: 'relative'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    action: {\r\n        backgroundColor: '#B03972',\r\n        position: 'relative',\r\n        justifyContent: 'center',\r\n        '&:hover':{\r\n            cursor: 'pointer',\r\n            backgroundColor: 'hsla(331, 51%, 46%, 0.84)'\r\n        },\r\n        '&:active':{\r\n            backgroundColor: 'hsla(331, 51%, 43%, 0.91)'\r\n        }\r\n    },\r\n    button: {\r\n        color: 'white',\r\n        marginRight: '6px'\r\n    },\r\n    spanLink: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 500\r\n    },\r\n    expandIconContainer: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 5,\r\n        '&:hover':{\r\n            cursor: 'pointer',\r\n            color: 'white'\r\n        }\r\n    },\r\n    deleteIconContainer:{\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        '&:hover':{\r\n            cursor: 'pointer',\r\n            color: '#ce054d'\r\n        },\r\n        '&:active':{\r\n            color: 'red'\r\n        },\r\n        '&:focus': {\r\n            color: 'white'\r\n        }\r\n    }\r\n})\r\n\r\nconst Blog = ({ blog , index }) => {\r\n    const isIdInState = useSelector( state => state.showLikes.filter(id => id === blog.id).length > 0)\r\n    const blogs = useSelector( state => state.blogs)\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteBlog = async () => {\r\n        const newBlogs = blogs.filter(item => item.id !== blog.id)\r\n        const response = await blogServices.deleteBlog(blog.id)\r\n        dispatch(setBlogs(newBlogs))\r\n        return response\r\n    }\r\n\r\n    const toggleShowLikes = () => {\r\n        console.log(blog.id)\r\n        dispatch(toggleIdOfComponentToHideOrShowLikes(blog.id))\r\n    }\r\n\r\n    const changeLikes = async () => {\r\n        const response = await blogServices.updateBlog(blog)\r\n        const newBlogs = await blogServices.getUserBlogs()\r\n        dispatch(setBlogs(newBlogs))\r\n        return response\r\n    }\r\n\r\n    const handleLikes = e => {\r\n        const newBlog = blog\r\n        newBlog.likes = e.target.value\r\n        const newBlogs = [].concat(blogs)\r\n        newBlogs[index] = newBlog\r\n        dispatch(setBlogs(newBlogs))\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardHeader className={classes.header} titleTypographyProps={{ variant:'subtitle1' }} title={blog.title} subheader={'by ' + blog.author} />\r\n                {isIdInState === false\r\n                    ? <div onClick={toggleShowLikes} className={classes.expandIconContainer}>\r\n                        <ExpandMoreIcon style={{ color: 'inherit' }} />\r\n                    </div>\r\n                    :\r\n                    <div onClick={toggleShowLikes} className={classes.expandIconContainer}>\r\n                        <UnfoldLessIcon style={{ color: 'inherit' }} />\r\n                    </div>\r\n                }\r\n                <div onClick={deleteBlog} className={classes.deleteIconContainer}>\r\n                    <HighlightOffIcon style={{ color: 'inherit' }}/>\r\n                </div>\r\n                {isIdInState === false\r\n                    ? <span></span>\r\n                    : <div className='toggableContent'>\r\n                        <p style={{ textAlign: 'center', fontSize: '1rem' }}>Likes: <input value={blog.likes} onChange={handleLikes} type=\"text\"/><button onClick={changeLikes}>change</button></p>\r\n                    </div>\r\n                }\r\n                <CardActions className={classes.action}>\r\n                    <a target=\"_blank\"  rel=\"noopener noreferrer\" href={blog.url}>\r\n                        <span className={classes.spanLink}></span>\r\n                    </a>\r\n                    <Typography className={classes.button}>Go to blog</Typography>\r\n                    <OpenInNewIcon disabled style={{ color: 'white' }} />\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog\r\n","const successReducer = (state=null, action) => {\r\n    switch (action.type){\r\n    case 'SET_SUCCESS':{\r\n        return action.data\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const setSuccess = data => {\r\n    return { type: 'SET_SUCCESS', data }\r\n}\r\n\r\nexport default successReducer","const submittedReducer = (state=false, action) => {\r\n    switch (action.type){\r\n    case 'SET_SUBMITTED':{\r\n        return action.data\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const setSubmitted = data => {\r\n    return { type: 'SET_SUBMITTED', data }\r\n}\r\n\r\nexport default submittedReducer","import React from 'react'\r\nimport blogServices from '../services/blogs'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport './NewBlog.css'\r\nimport { setBlogs } from '../reducers/blogsReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setError } from '../reducers/errorReducer'\r\nimport { setSuccess } from '../reducers/successReducer'\r\nimport { setSubmitted } from '../reducers/submittedReducer'\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\n\r\nconst NewBlog = () => {\r\n    const error = useSelector( state => state.error)\r\n    const isSubmitted = useSelector( state => state.isSubmitted)\r\n    const success = useSelector( state => state.success)\r\n    const dispatch = useDispatch()\r\n\r\n    const newBlog = async e => {\r\n        e.preventDefault()\r\n        const title = e.target.title.value\r\n        const author = e.target.author.value\r\n        const likes = e.target.likes.value\r\n        const url = e.target.url.value\r\n        const blog = { title, author, likes, url }\r\n        dispatch(setSubmitted(true))\r\n\r\n        try {\r\n            const newBlog = await blogServices.create(blog)\r\n            const userBlogs = await blogServices.getUserBlogs()\r\n            dispatch(setBlogs(userBlogs))\r\n        }\r\n        catch (exception) {\r\n            dispatch(setSubmitted(false))\r\n            dispatch(setSuccess('error'))\r\n            dispatch(setError(exception.response.data.error))\r\n        }\r\n\r\n        setTimeout(() => {\r\n            dispatch(setSubmitted(false))\r\n            dispatch(setSuccess(true))\r\n        }, 2000)\r\n        setTimeout(() => {\r\n            dispatch(setSuccess(null))\r\n        }, 5000)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={newBlog}>\r\n            <div className=\"input\">\r\n                <label className=\"input_title\" htmlFor=\"title\" ><span><p>Title</p></span></label>\r\n                <input className=\"input_value\" type=\"text\" id=\"title\"/>\r\n            </div>\r\n            <div className=\"input\">\r\n                <label className=\"input_title\" htmlFor=\"author\" ><span><p>Author</p></span></label>\r\n                <input className=\"input_value\" type=\"text\" id=\"author\"/>\r\n            </div>\r\n            <div className=\"input\">\r\n                <label className=\"input_title\" htmlFor=\"likes\" ><span><p>Likes</p></span></label>\r\n                <input className=\"input_value\" type=\"text\" id=\"likes\"/>\r\n            </div>\r\n            <div className=\"input\">\r\n                <label className=\"input_title\" htmlFor=\"url\" ><span><p>URL</p></span></label>\r\n                <input className=\"input_value\" type=\"text\" id=\"url\"/>\r\n            </div>\r\n            <button className=\"btn\" type=\"submit\">Submit</button>\r\n            {isSubmitted === true\r\n                ? <CircularProgress />\r\n                : null\r\n            }\r\n            {success === true\r\n                ? <Alert severity=\"success\">Blog added!</Alert>\r\n                : success === 'error'\r\n                    ? <Alert severity=\"error\">{error}</Alert>\r\n                    : null\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default NewBlog","const sortReducer = (state='date', action) => {\r\n    switch (action.type){\r\n    case 'SET_SORT':{\r\n        return action.data\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const setSort = data => {\r\n    return { type: 'SET_SORT', data }\r\n}\r\n\r\nexport default sortReducer","import React from 'react'\r\nimport Blog from './Blog'\r\nimport { Toolbar, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport ToggleButton from '@material-ui/lab/ToggleButton'\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\r\nimport NewBlog from './NewBlog'\r\nimport './Blogs.css'\r\nimport blogsService from '../services/blogs'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setBlogs } from '../reducers/blogsReducer'\r\nimport { setPage } from '../reducers/pageReducer'\r\nimport { setSort } from '../reducers/sortReducer'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    username: {\r\n        flexGrow: 4,\r\n    },\r\n    maincolor:{\r\n        backgroundColor: '#B03972'\r\n    },\r\n    newLink: {\r\n        flexGrow: 2\r\n    },\r\n    allBlogs: {\r\n        flexGrow: 2\r\n    },\r\n    title:{\r\n        fontSize: '2.3rem'\r\n    },\r\n    toggleButton:{\r\n        border: 'none',\r\n        color: 'white'\r\n    },\r\n    container:{\r\n        margin: '2rem 1rem'\r\n    }\r\n}))\r\n\r\nconst NoBlogs = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = () => {\r\n        dispatch(setPage('new'))\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <h2 style={{ color: '#3f51b5' }}>No blogs yet, try <button className=\"newPage\" onClick={handleClick} style={{ padding: '.5rem 2rem', borderRadius: '5px', border: '1px solid grey', cursor: 'pointer' }}>Adding a new blog</button></h2>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Blogs = () => {\r\n    const classes = useStyles()\r\n    const user = useSelector(state => state.user)\r\n    const blogs = useSelector( state => state.blogs)\r\n    const page = useSelector( state => state.page)\r\n    const sort = useSelector( state => state.sortBy)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handlePage = (event, newPage) => {\r\n        dispatch(setPage(newPage))\r\n        newPage === 'new' ? history.push(`/blogs/${newPage}`) : newPage === 'logout' ? history.push('/logout') : history.push('/blogs')\r\n    }\r\n    const sortByLikes = () => {\r\n        const oldBlogList = [...blogs]\r\n        const sortedBlogs = oldBlogList.sort((a, b) => parseFloat(b.likes) - parseFloat(a.likes) )\r\n        dispatch(setBlogs(sortedBlogs))\r\n    }\r\n\r\n    const sortByDate = async () => {\r\n        const databaseBlogs = await blogsService.getUserBlogs()\r\n        dispatch(setBlogs(databaseBlogs))\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={classes.maincolor}>\r\n                    <Typography variant=\"h6\" edge=\"start\" className={classes.username}>\r\n                        {user.name}\r\n                    </Typography>\r\n                    <ToggleButtonGroup\r\n                        value={page}\r\n                        exclusive\r\n                        onChange={handlePage}\r\n                        size=\"medium\"\r\n                    >\r\n                        <ToggleButton className={classes.toggleButton} value=\"all\" >\r\n                            <div className={classes.allBlogs} color=\"inherit\">All your blogs</div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className={classes.toggleButton} value=\"new\" >\r\n                            <div className={classes.newLink} color=\"inherit\">Add new link</div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className={classes.toggleButton} value=\"logout\" >\r\n                            <div className={classes.newLink} color=\"inherit\">Logout</div>\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {page === 'all' ?\r\n                <>\r\n                    <div style={{ display: 'flex', justifyContent:'flex-end', margin: '1rem' }}>\r\n                        <div>\r\n                            <p style={{ display: 'inline-block', fontSize: '1rem', marginRight: '1rem', color: 'grey' }}>Sort by</p>\r\n                            <ToggleButtonGroup value={sort} exclusive onChange={(e, newSort) => {\r\n                                dispatch(setSort(newSort))\r\n                            }}>\r\n                                <ToggleButton value=\"date\" onClick={sortByDate}>Date</ToggleButton>\r\n                                <ToggleButton value=\"likes\" onClick={sortByLikes}>Likes</ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </div>\r\n                    </div>\r\n                    {blogs.length < 1 ? <NoBlogs setPage={setPage} />\r\n                        :\r\n                        <div className=\"grid-container\" >\r\n                            { blogs.map((blog, index) => <Blog key={blog.id} index={index} blog={blog} />) }\r\n                        </div>\r\n                    }\r\n\r\n                </>\r\n                : <NewBlog />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Blogs","import React from 'react'\r\nimport cookie from 'cookie_js'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Logout = () => {\r\n    const history = useHistory()\r\n    cookie.remove('loggedBlogAppUser')\r\n    history.push('/')\r\n    window.location.reload(true)\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout","import axios from 'axios'\r\nconst baseurl = '/api/login'\r\n\r\n\r\nconst registerUser = async (userObject) => {\r\n    const response = await axios.post(baseurl, userObject)\r\n    return response.data\r\n}\r\n\r\nexport default { registerUser }","import React from 'react'\r\nimport './Register.css'\r\nimport { Button } from '@material-ui/core'\r\nimport service from '../services/register'\r\nimport loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setUser } from '../reducers/userReducer'\r\nimport { setError } from '../reducers/errorReducer'\r\nimport { setPage } from '../reducers/pageReducer'\r\nimport { setBlogs } from '../reducers/blogsReducer'\r\nimport cookie from 'cookie_js'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nconst Register = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const error = useSelector( state => state.error)\r\n    const currentPage = useSelector(state => state.page)\r\n\r\n    if (currentPage !== 'register') {\r\n        dispatch(setPage('register'))\r\n    }\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        const name = e.target.name.value\r\n        const username = e.target.username.value\r\n        const password = e.target.password.value\r\n        const newUser = { name, username, password }\r\n\r\n        try{\r\n            const registeredUser = await service.registerUser(newUser)\r\n            const user = await loginService.login({ username, password })\r\n            dispatch(setUser(user))\r\n            blogService.setToken(user.token)\r\n            cookie.set('loggedBlogAppUser', JSON.stringify(user), { expires: 7 })\r\n            const blogs = await blogService.getUserBlogs()\r\n            dispatch(setBlogs(blogs))\r\n            dispatch(setPage('all'))\r\n        }\r\n        catch (exception){\r\n            dispatch(setError(exception.response.data.error))\r\n        }\r\n    }\r\n\r\n    const handleGoBackToLoginPage = () => {\r\n        dispatch(setPage('login'))\r\n        history.push('/login')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"nav\">\r\n                <Button size=\"small\" onClick={handleGoBackToLoginPage} variant=\"contained\" color=\"secondary\">Go back to Login page</Button>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input_group\">\r\n                    <label htmlFor=\"Password\">Name</label>\r\n                    <input placeholder=\"John Doe\" type=\"text\" name=\"name\" id=\"name\"/>\r\n                </div>\r\n                <div className=\"input_group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input placeholder=\"3-15 characters\" type=\"text\" id=\"username\"/>\r\n                </div>\r\n                <div className=\"input_group\">\r\n                    <label htmlFor=\"Password\">Password</label>\r\n                    <input placeholder=\"Must be a secure password\" type=\"password\" id=\"password\"/>\r\n                </div>\r\n                <Button size=\"small\" type=\"submit\" variant=\"contained\" color=\"primary\">Register</Button>\r\n            </form>\r\n            {error !== null  ?\r\n                <div className=\"alertWrapper\">\r\n                    <Alert severity=\"error\">{error}</Alert>\r\n                </div>: null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","import React, { useEffect } from 'react'\nimport blogService from './services/blogs'\nimport './main.css'\nimport Login from './components/Login'\nimport Blogs from './components/Blogs'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUser } from './reducers/userReducer'\nimport { setBlogs } from './reducers/blogsReducer'\nimport { setPage } from './reducers/pageReducer'\nimport cookie from 'cookie_js'\nimport {\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom'\nimport Logout from './components/Logout'\nimport Register from './components/Register'\n\n\nconst App = () => {\n    const dispatch = useDispatch()\n    const user = useSelector(state => state.user)\n\n    useEffect(() => {\n        const loggedUserJSON = cookie.get('loggedBlogAppUser')\n        if (loggedUserJSON) {\n            const loggedUser = JSON.parse(loggedUserJSON)\n            dispatch(setUser(loggedUser))\n            blogService.setToken(loggedUser.token)\n            blogService.getUserBlogs().then(blogs => dispatch(setBlogs(blogs))).catch(err => {\n                console.log('error fetching blogs: ', err)\n            })\n        } else {\n            dispatch(setPage('login'))\n        }\n    }, [dispatch])\n\n\n\n    return (\n        <>\n            <Switch>\n                <Route path=\"/logout\">\n                    <Logout/>\n                </Route>\n                <Route path=\"/register\">\n                    {user ? <Redirect to=\"/blogs\"/>: <Register/>}\n                </Route>\n                <Route path=\"/login\">\n                    {user ? <Redirect to=\"/blogs\"/> : <Login/>}\n                </Route>\n                <Route path=\"/blogs\">\n                    {user ? <Blogs /> : <Redirect to=\"/\" />}\n                </Route>\n                <Route path=\"/\">\n                    {user === null ? <Redirect to=\"/login\"/> : <Redirect to=\"/blogs\"/>}\n                </Route>\n            </Switch>\n        </>\n\n    )\n}\n\nexport default App","import { combineReducers, createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport userReducer from './reducers/userReducer'\r\nimport passwordReducer from './reducers/passwordReducer'\r\nimport usernameReducer from './reducers/usernameReducer'\r\nimport errorReducer from './reducers/errorReducer'\r\nimport blogsReducer from './reducers/blogsReducer'\r\nimport successReducer from './reducers/successReducer'\r\nimport submittedReducer from './reducers/submittedReducer'\r\nimport pageReducer from './reducers/pageReducer'\r\nimport sortReducer from './reducers/sortReducer'\r\nimport showLikesReducer from './reducers/showLikesReducer'\r\n\r\nconst combinedStore = combineReducers({\r\n    user: userReducer, username: usernameReducer, password: passwordReducer, error: errorReducer,\r\n    blogs: blogsReducer, success: successReducer, isSubmitted: submittedReducer, page: pageReducer,\r\n    sortBy: sortReducer, showLikes: showLikesReducer } )\r\n\r\nconst composeEnhancers = composeWithDevTools({ trace: true, traceLimit: 25 })\r\n\r\nconst store = createStore( combinedStore, composeEnhancers(  applyMiddleware(thunk) ) )\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { BrowserRouter as Router } from 'react-router-dom/'\n\nReactDOM.render(<Provider store={store}><Router><App /></Router></Provider>, document.getElementById('root'))"],"sourceRoot":""}